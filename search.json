[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cognitive Models",
    "section": "",
    "text": "Preface",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#why-julia",
    "href": "index.html#why-julia",
    "title": "Cognitive Models",
    "section": "Why Julia?",
    "text": "Why Julia?\nJulia - the new cool kid on the scientific block - is a modern programming language with many benefits when compared with R or Python. Importantly, it is currently the only language in which we can fit all the cognitive models under a Bayesian framework using a unified interface like Turing and SSM.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#why-bayesian",
    "href": "index.html#why-bayesian",
    "title": "Cognitive Models",
    "section": "Why Bayesian?",
    "text": "Why Bayesian?\nUnfortunately, cognitive models often involve distributions for which Frequentist estimations are not yet implemented, and usually contain a lot of parameters (due to the presence of random effects), which makes traditional algorithms fail to converge. Simply put, the Bayesian approach is the only one currently robust enough to fit these somewhat complex models.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#the-plan",
    "href": "index.html#the-plan",
    "title": "Cognitive Models",
    "section": "The Plan",
    "text": "The Plan\nAs this is a fast-evolving field (both from the theoretical - with new models being proposed - and the technical side - with improvements to the packages and the algorithms), the book needs to be future-resilient and updatable to keep up with the latest best practices.\n\nDecide on the framework to build the book in a reproducible and collaborative manner (Quarto?)\nSet up the infrastructure to automatically build it using GitHub actions and host it on GitHub pages\nWrite the content of the book\nReferencing\n\nAdd Zenodo DOI and reference (but how to deal with evolving author? Through versioning?)\nPublish a paper to present the book project (JOSE)?",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#looking-for-coauthors",
    "href": "index.html#looking-for-coauthors",
    "title": "Cognitive Models",
    "section": "Looking for Coauthors",
    "text": "Looking for Coauthors\nThis project can only be achieved by a team, and I suspect no single person has currently all the skills and knowledge to cover all the content. We need many people who have strengths in various aspects, such as Julia/Turing, theory, writing, making plots etc. Most importantly, this project can serve as a way for us to learn more about this approach to psychological science.\nIf you are interested in the project, you can let us know by opening an issue or getting in touch.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "1_introduction.html",
    "href": "1_introduction.html",
    "title": "1  Fundamentals of Bayesian Modeling in Julia",
    "section": "",
    "text": "1.1 Very quick intro to Julia and Turing\nGoal is to teach just enough so that the reader understands the code.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of Bayesian Modeling in Julia</span>"
    ]
  },
  {
    "objectID": "1_introduction.html#very-quick-intro-to-julia-and-turing",
    "href": "1_introduction.html#very-quick-intro-to-julia-and-turing",
    "title": "1  Fundamentals of Bayesian Modeling in Julia",
    "section": "",
    "text": "1.1.1 Generate Data from Normal Distribution\n\n\nCode\nusing Turing, Distributions, Random\nusing Makie\n\n# μ=100, σ=15\niq = rand(Normal(100, 15), 500)\n\n\n500-element Vector{Float64}:\n  98.48776743748695\n  86.32452491238901\n  78.83526938610933\n 113.04410457290572\n  97.40745839499718\n  97.97419028900438\n  88.40275967411239\n  92.72164237452724\n 113.32790576148362\n  78.51901725613449\n  89.44848393975448\n 110.37730425103749\n  90.66395248256771\n   ⋮\n 112.27965213239929\n 110.4084690224403\n 117.07901096715132\n 104.56556661142926\n 115.76409270035695\n 102.61126569224227\n  92.7517736224979\n 111.46970868742785\n  93.68344400954143\n 109.85853656837163\n  98.05396623359759\n 121.90982884976155\n\n\n\n\nCode\nfig = Figure()\nax = Axis(fig[1, 1], title=\"Distribution\")\ndensity!(ax, iq)\nfig\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie C:\\Users\\domma\\.julia\\packages\\Makie\\VRavR\\src\\scenes.jl:220\n\n\n\n\n\n\n\n\n\n\n\n1.1.2 Recover Distribution Parameters with Turing\n\n\nCode\n@model function model_gaussian(x)\n    # Priors\n    μ ~ Uniform(0, 200)\n    σ ~ Uniform(0, 30)\n\n    # Check against data\n    for i in 1:length(x)\n        x[i] ~ Normal(μ, σ)\n    end\nend\n\nmodel = model_gaussian(iq)\nsampling_results = sample(model, NUTS(), 400)\n\n# Summary (95% CI)\nsummarystats(sampling_results)\n\n\n┌ Info: Found initial step size\n└   ϵ = 0.025\nSampling:   0%|█                                        |  ETA: 0:00:32Sampling: 100%|█████████████████████████████████████████| Time: 0:00:01\n\n\n\nSummary Statistics\n  parameters      mean       std      mcse   ess_bulk   ess_tail      rhat   e ⋯\n      Symbol   Float64   Float64   Float64    Float64    Float64   Float64     ⋯\n           μ   99.7656    0.6604    0.0334   396.7968   287.6290    1.0019     ⋯\n           σ   15.8141    0.5585    0.0280   390.8097   254.6258    1.0045     ⋯\n                                                                1 column omitted",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of Bayesian Modeling in Julia</span>"
    ]
  },
  {
    "objectID": "1_introduction.html#linear-models",
    "href": "1_introduction.html#linear-models",
    "title": "1  Fundamentals of Bayesian Modeling in Julia",
    "section": "1.2 Linear Models",
    "text": "1.2 Linear Models\nUnderstand what the parameters mean (intercept, slopes, sigma).\n\nBoostrapping: Introduce concepts related to pseudo-posterior distribution description\nHierarchical Models: Simpson’s paradox, random effects, how to leverage them to model interindividual differences\nBayesian estimation: introduce Bayesian estimation and priors over parameters\nBayesian mixed linear regression: put everything together",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Fundamentals of Bayesian Modeling in Julia</span>"
    ]
  },
  {
    "objectID": "2_predictors.html",
    "href": "2_predictors.html",
    "title": "2  Predictors",
    "section": "",
    "text": "2.1 Categorical predictors (Condition, Group, …)\nNested interactions, contrasts, …",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Predictors</span>"
    ]
  },
  {
    "objectID": "2_predictors.html#ordered-predictors-likert-scales",
    "href": "2_predictors.html#ordered-predictors-likert-scales",
    "title": "2  Predictors",
    "section": "2.2 Ordered predictors (Likert Scales)",
    "text": "2.2 Ordered predictors (Likert Scales)\nLikert scales, i.e., ordered multiple discrete choices are often used in surveys and questionnaires. While such data is often treated as a continuous variable, such assumption is not necessarily valid. Indeed, distance between the choices is not necessarily equal. For example, the difference between “strongly agree” and “agree” might not be the same as between “agree” and “neutral”. Even when using integers like 1, 2, 3, 4; people might implicitly process “4” as more extreme relative to “3” as “3” to “2”.\n\n\nThe probabilities assigned to discrete probability descriptors are not necessarily equidistant (https://github.com/zonination/perceptions)\n\nWhat can we do to better reflect the cognitive process underlying a Likert scale responses? Monotonic effects.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Predictors</span>"
    ]
  },
  {
    "objectID": "2_predictors.html#interactions",
    "href": "2_predictors.html#interactions",
    "title": "2  Predictors",
    "section": "2.3 Interactions",
    "text": "2.3 Interactions\nTodo.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Predictors</span>"
    ]
  },
  {
    "objectID": "2_predictors.html#non-linear-relationships-polynomial-gams",
    "href": "2_predictors.html#non-linear-relationships-polynomial-gams",
    "title": "2  Predictors",
    "section": "2.4 Non-linear relationships (polynomial, GAMs)",
    "text": "2.4 Non-linear relationships (polynomial, GAMs)\nTodo.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Predictors</span>"
    ]
  },
  {
    "objectID": "3_scales.html",
    "href": "3_scales.html",
    "title": "3  Choice and Scales",
    "section": "",
    "text": "Beta models\nOrdBeta models for slider scales\nLogistic models for binary data\n\nUse the speed accuracy data that we use in the next chapter.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Choice and Scales</span>"
    ]
  },
  {
    "objectID": "4_rt.html",
    "href": "4_rt.html",
    "title": "4  Reaction Times",
    "section": "",
    "text": "4.1 The Data\nData from Wagenmakers et al. (2008) - Experiment 1. Using the same procedure as the authors, we excluded all trials with uninterpretable response time (see Thériault et al. 2024), i.e., responses that are too fast response (&lt;180 ms) or too slow (&gt;2 sec instead of &gt;3 sec).\nWe create a new column, Accuracy, which is the “binarization” of the Condition column, and is equal to 1 when the condition is \"Accuracy\" and 0 when it is \"Speed\".",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Reaction Times</span>"
    ]
  },
  {
    "objectID": "4_rt.html#the-data",
    "href": "4_rt.html#the-data",
    "title": "4  Reaction Times",
    "section": "",
    "text": "#| code-fold: false\n\nusing Downloads, CSV, DataFrames\nusing Turing, Distributions, SequentialSamplingModels\nusing CairoMakie\n\ndf = CSV.read(Downloads.download(\"https://raw.githubusercontent.com/DominiqueMakowski/CognitiveModels/main/data/wagenmakers2008.csv\"), DataFrame)\nfirst(df, 10)\n\n#| output: false\n\ndf = df[df.Error .== 0, :]\ndf.Accuracy = df.Condition .== \"Accuracy\"\n\n\n\n\n\n\nCode Tip\n\n\n\nNote the usage of vectorization .== as we want to compare each element of the Condition vector to the target \"Accuracy\".\n\n\nfunction plot_distribution(df, title=\"Empirical Distribution of Data from Wagenmakers et al. (2018)\")\n    fig = Figure()\n    ax = Axis(fig[1, 1], title=title,\n        xlabel=\"RT (s)\",\n        ylabel=\"Distribution\",\n        yticksvisible=false,\n        xticksvisible=false,\n        yticklabelsvisible=false)\n    CairoMakie.density!(df[df.Condition .== \"Speed\", :RT], color=(\"#EF5350\", 0.7), label = \"Speed\")\n    CairoMakie.density!(df[df.Condition .== \"Accuracy\", :RT], color=(\"#66BB6A\", 0.7), label = \"Accuracy\")\n    CairoMakie.axislegend(\"Condition\"; position=:rt)\n    CairoMakie.ylims!(ax, (0, nothing))\n    return fig\nend\n\nplot_distribution(df, \"Empirical Distribution of Data from Wagenmakers et al. (2018)\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Reaction Times</span>"
    ]
  },
  {
    "objectID": "4_rt.html#descriptive-models",
    "href": "4_rt.html#descriptive-models",
    "title": "4  Reaction Times",
    "section": "4.2 Descriptive Models",
    "text": "4.2 Descriptive Models\n\n4.2.1 Bayesian Linear Models\n\nThe Model\n#| code-fold: false\n\n@model function model_linear(rt; condition=nothing)\n\n    # Set priors on variance, intercept and effect of ISI\n    σ ~ truncated(Normal(0, 1); lower=0)\n    intercept ~ truncated(Normal(0, 1); lower=0)\n    slope_accuracy ~ Normal(0, 0.5)\n\n    for i in 1:length(rt)\n        μ = intercept + slope_accuracy * condition[i]\n        rt[i] ~ Normal(μ, σ)\n    end\nend\n\n\nmodel = model_linear(df.RT; condition=df.Accuracy)\nchain_linear = sample(model, NUTS(), 400)\n\n# Summary (95% CI)\nquantile(chain_linear; q=[0.025, 0.975])\nThe effect of Condition is significant, people are on average slower (higher RT) when condition is \"Accuracy\". But is our model good?\n\n\nPosterior Predictive Check\n#| output: false\n\npred = predict(model_linear([(missing) for i in 1:length(df.RT)], condition=df.Accuracy), chain_linear)\npred = Array(pred)\n#| fig-width: 10\n#| fig-height: 7\n\nfig = plot_distribution(df, \"Predictions made by Linear Model\")\nfor i in 1:length(chain_linear)\n    lines!(Makie.KernelDensity.kde(pred[:, i]), color=ifelse(df.Accuracy[i] == 1, \"#388E3C\", \"#D32F2F\"), alpha=0.1)\nend\nfig\n\n\nThe Problem with Linear Models\nReaction time (RTs) have been traditionally modeled using traditional linear models and their derived statistical tests such as t-test and ANOVAs. Importantly, linear models - by definition - will try to predict the mean of the outcome variable by estimating the “best fitting” Normal distribution. In the context of reaction times (RTs), this is not ideal, as RTs typically exhibit a non-normal distribution, skewed towards the left with a long tail towards the right. This means that the parameters of a Normal distribution (mean \\(\\mu\\) and standard deviation \\(\\sigma\\)) are not good descriptors of the data.\n\n\nLinear models try to find the best fitting Normal distribution for the data. However, for reaction times, even the best fitting Normal distribution (in red) does not capture well the actual data (in grey).\n\nA popular mitigation method to account for the non-normality of RTs is to transform the data, using for instance the popular log-transform. However, this practice should be avoided as it leads to various issues, including loss of power and distorted results interpretation (Lo and Andrews 2015; Schramm and Rouder 2019). Instead, rather than applying arbitrary data transformation, it would be better to swap the Normal distribution used by the model for a more appropriate one that can better capture the characteristics of a RT distribution.\n\n\n\n4.2.2 Shifted LogNormal Model\nOne of the obvious candidate alternative to the log-transformation would be to use a model with a Log-transformed Normal distribution.\nNew parameter, \\(\\tau\\) (Tau for delay), which corresponds to the “starting time”. We need to set a prior for this parameter, which is usually truncated between 0 and the minimum RT of the data (the logic being that the minimum delay for response must be lower than the faster response actually observed).\nxaxis = range(0, 1, 1000)\nlines(xaxis, pdf.(Gamma(1.1, 11), xaxis))\n\nModel\n#| code-fold: false\n\n@model function model_lognormal(rt; min_rt=minimum(df.RT), condition=nothing)\n\n    # Priors \n    σ ~ truncated(Normal(0, 0.5); lower=0)\n    τ ~ truncated(Gamma(1.1, 11); upper=min_rt)\n\n    intercept ~ Normal(0, 2)\n    slope_accuracy ~ Normal(0, 0.5)\n\n    for i in 1:length(rt)\n        μ = intercept + slope_accuracy * condition[i]\n        rt[i] ~ ShiftedLogNormal(μ, σ, τ)\n    end\nend\n\nmodel = model_lognormal(df.RT; condition=df.Accuracy)\nchain_lognormal = sample(model, NUTS(), 400)\n\n# Summary (95% CI)\nquantile(chain_lognormal; q=[0.025, 0.975])\n#| output: false\n\n# pred = predict(model_lognormal([(missing) for i in 1:length(df.RT)]; condition=df.Accuracy), chain_lognormal)\n# pred = Array(pred)\n#| fig-width: 10\n#| fig-height: 7\n\n# fig = plot_distribution(df, \"Predictions made by Shifted LogNormal Model\")\n# for i in 1:length(chain_lognormal)\n#     lines!(Makie.KernelDensity.kde(pred[:, i]), color=ifelse(df.Accuracy[i] == 1, \"#388E3C\", \"#D32F2F\"), alpha=0.1)\n# end\n# fig\n\n\nMore Conditional Parameters\n\n\n\n4.2.3 ExGaussian Model\n\nEx-Gaussian models in R: A Tutorial\n\n\n\n4.2.4 Wald Model\nMoe from statistical models that describe to models that generate RT-like data.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Reaction Times</span>"
    ]
  },
  {
    "objectID": "4_rt.html#generative-models-ddm",
    "href": "4_rt.html#generative-models-ddm",
    "title": "4  Reaction Times",
    "section": "4.3 Generative Models (DDM)",
    "text": "4.3 Generative Models (DDM)\nUse DDM as a case study to introduce generative models\n\nDrift Diffusion Model (DDM) in R: A Tutorial",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Reaction Times</span>"
    ]
  },
  {
    "objectID": "4_rt.html#other-models-lba-lnr",
    "href": "4_rt.html#other-models-lba-lnr",
    "title": "4  Reaction Times",
    "section": "4.4 Other Models (LBA, LNR)",
    "text": "4.4 Other Models (LBA, LNR)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Reaction Times</span>"
    ]
  },
  {
    "objectID": "4_rt.html#additional-resources",
    "href": "4_rt.html#additional-resources",
    "title": "4  Reaction Times",
    "section": "4.5 Additional Resources",
    "text": "4.5 Additional Resources\n\nLindelov’s overview of RT models: An absolute must-read.\nDe Boeck & Jeon (2019): A paper providing an overview of RT models.\nhttps://github.com/vasishth/bayescogsci\n\n\n\n\n\nLo, Steson, and Sally Andrews. 2015. “To Transform or Not to Transform: Using Generalized Linear Mixed Models to Analyse Reaction Time Data.” Frontiers in Psychology 6: 1171.\n\n\nSchramm, Pele, and Jeffrey N Rouder. 2019. “Are Reaction Time Transformations Really Beneficial?”\n\n\nThériault, Rémi, Mattan S Ben-Shachar, Indrajeet Patil, Daniel Lüdecke, Brenton M Wiernik, and Dominique Makowski. 2024. “Check Your Outliers! An Introduction to Identifying Statistical Outliers in r with Easystats.” Behavior Research Methods 56 (4): 4162–72.\n\n\nWagenmakers, Eric-Jan, Roger Ratcliff, Pablo Gomez, and Gail McKoon. 2008. “A Diffusion Model Account of Criterion Shifts in the Lexical Decision Task.” Journal of Memory and Language 58 (1): 140–59.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Reaction Times</span>"
    ]
  },
  {
    "objectID": "5_individual.html",
    "href": "5_individual.html",
    "title": "5  Individual Parameters",
    "section": "",
    "text": "From mixed models\nAs prior-informed individual Bayesian models",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Individual Parameters</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Lo, Steson, and Sally Andrews. 2015. “To Transform or Not to\nTransform: Using Generalized Linear Mixed Models to Analyse Reaction\nTime Data.” Frontiers in Psychology 6: 1171.\n\n\nSchramm, Pele, and Jeffrey N Rouder. 2019. “Are Reaction Time\nTransformations Really Beneficial?”\n\n\nThériault, Rémi, Mattan S Ben-Shachar, Indrajeet Patil, Daniel Lüdecke,\nBrenton M Wiernik, and Dominique Makowski. 2024. “Check Your\nOutliers! An Introduction to Identifying Statistical Outliers in r with\nEasystats.” Behavior Research Methods 56 (4): 4162–72.\n\n\nWagenmakers, Eric-Jan, Roger Ratcliff, Pablo Gomez, and Gail McKoon.\n2008. “A Diffusion Model Account of Criterion Shifts in the\nLexical Decision Task.” Journal of Memory and Language\n58 (1): 140–59.",
    "crumbs": [
      "References"
    ]
  }
]